1. Redisigning the Navbar. I looked at the existing sister site as the model for the styling. Using jquery to alter the opacity of the navbar upon scrolling.
2. Creating a chatbox (front end). Learned about textarea tag in HTML, how to create a partial view layered on an existing view and common/visible on specific pages, the importance of referencing JS/Jquery tags in the right order. I styled the box similarly to the navbar, and made it collapsible.  The heading had the name of the person to whom the message was being sent. Then I added a dropdown list from which the user could choose who to send the message to.  Since the chatbox was supposed to be accesible on different pages, I could only pass a model to it from a controller that was common to the various controllers for the different pages. So I created a base controller from which the others inherited, and in that controller I queried the database for all the site users who would potentially become recipients for the messages.
3. Saving the messages to the DB.  On the server side chathub class, I was able to retreive the necessary data and save to the DB.
4. Creating a code-first model for Entity Framework with foreign keys. (no code snippet)
5. Making a controller to get list of schedules from DB and organizing them according to jobs, then creating a view page where this data can be displayed in a tabular form.